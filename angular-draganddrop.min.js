/*! Angular draganddrop v0.2.2 | (c) 2013 Greg Berg√© | License MIT */
function draggableDirective(){return{restrict:"A",link:function(a,b,c){var d=b[0],e=c.effectAllowed,f=c.draggableData,g=c.draggableType,h="false"!==c.draggable;d.draggable=h,h&&d.addEventListener("dragstart",function(b){b.dataTransfer.effectAllowed=e||b.dataTransfer.effectAllowed;var c=a.$eval(f),d=angular.toJson(c);b.dataTransfer.setData("json/"+g,d),b.stopPropagation()})}}}function dropDirective(a){return{restrict:"A",link:function(b,c,d){function e(a){r=!1,a.preventDefault(),s(a)}function f(a){if(!i(b.$eval(n),a))return!0;o&&c.addClass(o),a.dataTransfer.dropEffect=m||a.dataTransfer.dropEffect,b.$apply(function(){p(b,{$event:a})})}function g(a){var c=j(a);h(),b.$apply(function(){q(b,{$data:c,$event:a})}),a.preventDefault()}function h(){r=!0,c.removeClass(o)}function i(a,b){return"boolean"==typeof a?a:"string"==typeof a?i([a],b):Array.isArray(a)?i(function(b){return b.some(function(b){return-1!==a.indexOf(b)})},b):"function"==typeof a&&a(k(b.dataTransfer.types))}function j(a){return k(a.dataTransfer.types).reduce(function(b,c){var d=a.dataTransfer.getData(c),e=/(.*)\//.exec(c);return e=e?e[1]:null,"json"===e&&(d=JSON.parse(d)),b[c]=d,b},{})}function k(a){return Array.prototype.slice.call(a)}var l=c[0],m=d.dropEffect,n=d.dropAccept,o=d.dragOverClass,p=a(d.dragOver),q=a(d.drop);l.addEventListener("dragover",e),l.addEventListener("drop",g),l.addEventListener("dragleave",h),b.$on("$destroy",function(){l.removeEventListener("dragover",e),l.removeEventListener("drop",g),l.removeEventListener("dragleave",h)});var r=!1,s=_.throttle(function(a){r||(exitted=!1,f(a))},16,{trailing:!1,leading:!0})}}}angular.module("draganddrop",[]).directive("draggable",draggableDirective).directive("drop",["$parse",dropDirective]);
//# sourceMappingURL=angular-draganddrop.min.map